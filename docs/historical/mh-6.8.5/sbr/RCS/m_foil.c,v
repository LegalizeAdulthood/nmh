head     1.3;
branch   ;
access   ;
symbols  ;
locks    ; strict;
comment  @ * @;


1.3
date     90.04.05.15.32.12;  author sources;  state Exp;
branches ;
next     1.2;

1.2
date     90.04.05.14.49.41;  author sources;  state Exp;
branches ;
next     1.1;

1.1
date     90.02.08.15.53.06;  author sources;  state Exp;
branches ;
next     ;


desc
@@


1.3
log
@add ID
@
text
@/* m_foil.c - foil search of .mh_profile */
#ifndef	lint
static char ident[] = "@@(#)$Id:$";
#endif	lint

#include "../h/mh.h"
#include <stdio.h>


void m_foil (path)
char   *path;
{
    register struct node *np;

    defpath = context = "/dev/null";

    if (path) {
	np = m_defs = (struct node *) malloc (sizeof *np);
	if (np == NULL)
	    adios (NULLCP, "unable to allocate profile storage");

	np -> n_name = getcpy ("Path");
	np -> n_field = getcpy (path);
	np -> n_context = 0;
	np -> n_next = NULL;

	if (mypath == NULL && (mypath = getenv ("HOME")) != NULL)
	    mypath = getcpy (mypath);		
    }
}
@


1.2
log
@add ID
@
text
@d3 1
a3 1
static char ident[] = "$Id:";
@


1.1
log
@Initial revision
@
text
@d2 3
@
