#!/bin/sh
#
# Test mhlogin
#

if test -z "${MH_OBJ_DIR}"; then
    srcdir=`dirname "$0"`/../..
    MH_OBJ_DIR=`cd "${srcdir}" && pwd`; export MH_OBJ_DIR
fi

. "${srcdir}/test/oauth/common.sh"

expect_no_creds() {
    cat /dev/null > "${MHTMPDIR}/$$.expected-creds"
    cat /dev/null > "${MHTMPDIR}/oauth-test"
    chmod 600 "${MHTMPDIR}/oauth-test"
}

test_mhlogin() {
    start_fakehttp
    run_test 'eval echo code | mhlogin -saslmech xoauth2 -authservice test' \
"Load the following URL in your browser and authorize nmh to access test:

http://127.0.0.1:${http_port}/oauth/auth?response_type=code&client_id=test-id&redirect_uri=urn%3Aietf%3Awg%3Aoauth%3A2.0%3Aoob&scope=test-scope

Enter the authorization code: $1"
    check_http_req
    check_creds_private
    check_creds
}

test_mhlogin_invalid_response() {
    test_mhlogin 'mhlogin: error exchanging code for OAuth2 token
mhlogin: invalid response'
}

#
# success cases
#

# TEST
start_test 'mhlogin receives access and expiration'

expect_http_post_code

fake_json_response <<EOF
{
  "access_token": "test-access",
  "token_type": "Bearer",
  "expires_in": 3600
}
EOF

expect_creds <<EOF
access: test-access
expire:
EOF

test_mhlogin

# TEST
start_test 'mhlogin receives access and refresh'

expect_http_post_code

fake_json_response <<EOF
{
  "access_token": "test-access",
  "token_type": "Bearer"
}
EOF

expect_creds <<EOF
access: test-access
EOF

test_mhlogin

# TEST
start_test 'mhlogin receives access, expiration, and refresh'

expect_http_post_code

fake_json_response <<EOF
{
  "access_token": "test-access",
  "refresh_token": "refresh-token",
  "expires_in": 3600,
  "token_type": "Bearer"
}
EOF

expect_creds <<EOF
access: test-access
refresh: refresh-token
expire:
EOF

test_mhlogin

# TEST
start_test 'mhlogin receives refresh only'

expect_http_post_code

fake_json_response <<EOF
{
  "refresh_token": "refresh-token",
  "token_type": "Bearer"
}
EOF

expect_creds <<EOF
refresh: refresh-token
EOF

test_mhlogin

# TEST
start_test 'mhlogin receives token_type only'

expect_http_post_code

fake_json_response <<EOF
{
  "token_type": "Bearer"
}
EOF

expect_no_creds

test_mhlogin_invalid_response

# TEST
start_test 'mhlogin ignores extra bits in successful response JSON'

expect_http_post_code

fake_json_response <<EOF
{
  "access_token": "test-access",
  "refresh_token": "refresh-token",
  "extra_object": {
    "a": 1,
    "b": [1, 2, 3],
    "c": [{}, {"foo": "bar"}]
  },
  "extra_int": 1,
  "expires_in": 3600,
  "token_type": "Bearer"
}
EOF

expect_creds <<EOF
access: test-access
refresh: refresh-token
expire:
EOF

test_mhlogin

# TEST
start_test 'mhlogin user enters bad code'

expect_http_post_code

fake_http_response '400 Bad Request' <<EOF
Content-Type: application/json

{
  "error": "invalid_grant"
}
EOF

expect_no_creds

test_mhlogin 'Code rejected; try again? '

#
# fail cases
#

# TEST
start_test 'mhlogin response has no content-type'

expect_http_post_code

fake_http_response '200 OK' <<EOF

{
  "access_token": "test-access",
  "token_type": "Bearer",
  "expires_in": 3600
}
EOF

expect_no_creds

test_mhlogin_invalid_response

# TEST
start_test 'mhlogin JSON array'

expect_http_post_code

fake_json_response <<EOF
[]
EOF

expect_no_creds

test_mhlogin_invalid_response

# TEST
start_test 'mhlogin JSON empty object'

expect_http_post_code

fake_json_response <<EOF
{}
EOF

expect_no_creds

test_mhlogin_invalid_response

# TEST
start_test 'mhlogin empty response body'

expect_http_post_code

fake_json_response <<EOF
EOF

expect_no_creds

test_mhlogin_invalid_response

# TEST
start_test 'mhlogin gets proper error from http'

expect_http_post_code

fake_http_response '400 Bad Request' <<EOF
Content-Type: application/json

{
  "error": "invalid_request"
}
EOF

expect_no_creds

test_mhlogin 'mhlogin: error exchanging code for OAuth2 token
mhlogin: bad OAuth request; re-run with -snoop and send REDACTED output to nmh-workers'

clean_fakehttp
finish_test

exit ${failed:-0}
